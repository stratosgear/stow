[user]
	email = stratosgear@gmail.com
	name = Stratos Gerakakis
	signingkey = 48D88152
[color]
 ui = true
 branch = auto
 diff = auto
 status = auto

[color "branch"]
 current = yellow reverse
 local = yellow
 remote = green

[color "diff"]
 meta = yellow bold
 frag = magenta bold
 old = red
 new = cyan

[color "status"]
 added = yellow
 changed = green
 untracked = cyan

[alias]
# shows list of files that have a merge conflict
conflicts = diff --name-only --diff-filter=U
	changes = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit

# unstages a file. use like 'git unstage filename'
unstage = reset HEAD --

# resets all uncomitted changes and files
abort = reset --hard HEAD

# shows diff only for files staged to commit
new = diff --cached

# shows only changes to files in current directory
here = status .

# undo last commit
undo = reset HEAD~1

# change last commit message
recommit = commit --amend

# basic stuff
st = status
ci = commit
br = branch
co = checkout
lg = log -p
da = difftool -d

delete-merged-branches = !sh -c 'git branch --merged master | grep -v master | xargs -n 1 git branch -d'

# list all aliases
# alias = !git config --list | grep 'alias\.' | sed 's/alias\.\([^=]*\)=\(.*\)/\1\t=> \2/' | sort
la = config -l | grep alias | cut -c 7-
restore-file = !git checkout $(git rev-list -n 1 HEAD -- "$1")^ -- "$1"
	plog = log --graph --decorate --pretty=format:\"%C(yellow)%h %Cblue%>(8,trunc)%ad %Cred%d %Creset%s %Cgreen%<(5)%aN%Creset\" --date=relative --all
	merged = !echo \"List of merged branches:\" && git branch --merged $([[ $1 != \"-f\" ]] && git rev-parse master) | egrep -v \"(^\\*|^\\s*(master|develop)$)\" | xargs -n 1 echo
	cleanup = !echo \"Removing merged branches:\" && git branch --merged $([[ $1 != \"-f\" ]] && git rev-parse master) | egrep -v \"(^\\*|^\\s*(master|develop)$)\" | xargs git branch -d
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /

# Store credentials to keyring:  http://blog.iqandreas.com/git/storing-https-authentication-in-ubuntu-and-arch-linux/
[credential]
	# Ubuntu
	#helper = /usr/share/doc/git/contrib/credential/gnome-keyring/git-credential-gnome-keyring
	# Arch
	helper = /usr/share/git/credential/gnome-keyring/git-credential-gnome-keyring

[push]
	default = simple
[core]
	editor = nano
	autocrlf = false
[diff]
	tool = meld
[difftool]
	prompt = false
#[merge]
#	tool = meld
#[mergetool]
#	prompt = false

[mergetool "p4merge"]
  cmd = p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
  keepTemporaries = false
  trustExitCode = false
  keepBackup = false

 [merge]
   tool = p4merge 